diff -ru ./src/shrpx.cc ../nghttp2-0.7.5-pthread-getspecific/src/shrpx.cc
--- ./src/shrpx.cc	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx.cc	2015-03-02 16:58:50.000000000 +0100
@@ -1884,15 +1884,15 @@
   }
 
   if (get_config()->uid != 0) {
-    if (log_config->accesslog_fd != -1 &&
-        fchown(log_config->accesslog_fd, get_config()->uid,
+    if (log_config()->accesslog_fd != -1 &&
+        fchown(log_config()->accesslog_fd, get_config()->uid,
                get_config()->gid) == -1) {
       auto error = errno;
       LOG(WARN) << "Changing owner of access log file failed: "
                 << strerror(error);
     }
-    if (log_config->errorlog_fd != -1 &&
-        fchown(log_config->errorlog_fd, get_config()->uid, get_config()->gid) ==
+    if (log_config()->errorlog_fd != -1 &&
+        fchown(log_config()->errorlog_fd, get_config()->uid, get_config()->gid) ==
             -1) {
       auto error = errno;
       LOG(WARN) << "Changing owner of error log file failed: "
diff -ru ./src/shrpx_http_downstream_connection.cc ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_http_downstream_connection.cc
--- ./src/shrpx_http_downstream_connection.cc	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_http_downstream_connection.cc	2015-03-02 16:59:12.000000000 +0100
@@ -358,7 +358,7 @@
   if (LOG_ENABLED(INFO)) {
     const char *hdrp;
     std::string nhdrs;
-    if (log_config->errorlog_tty) {
+    if (log_config()->errorlog_tty) {
       nhdrs = http::colorizeHeaders(hdrs.c_str());
       hdrp = nhdrs.c_str();
     } else {
diff -ru ./src/shrpx_https_upstream.cc ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_https_upstream.cc
--- ./src/shrpx_https_upstream.cc	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_https_upstream.cc	2015-03-02 16:59:23.000000000 +0100
@@ -810,7 +810,7 @@
 void HttpsUpstream::log_response_headers(const std::string &hdrs) const {
   const char *hdrp;
   std::string nhdrs;
-  if (log_config->errorlog_tty) {
+  if (log_config()->errorlog_tty) {
     nhdrs = http::colorizeHeaders(hdrs.c_str());
     hdrp = nhdrs.c_str();
   } else {
diff -ru ./src/shrpx_log.cc ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log.cc
--- ./src/shrpx_log.cc	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log.cc	2015-03-02 16:59:43.000000000 +0100
@@ -99,7 +99,7 @@
     return;
   }
 
-  auto lgconf = log_config;
+  auto lgconf = log_config();
 
   if (!log_enabled(severity_) ||
       (lgconf->errorlog_fd == -1 && !get_config()->errorlog_syslog)) {
@@ -159,7 +159,7 @@
 } // namespace
 
 void upstream_accesslog(const std::vector<LogFragment> &lfv, LogSpec *lgsp) {
-  auto lgconf = log_config;
+  auto lgconf = log_config();
 
   if (lgconf->accesslog_fd == -1 && !get_config()->accesslog_syslog) {
     return;
@@ -272,7 +272,7 @@
 int reopen_log_files() {
   int res = 0;
 
-  auto lgconf = log_config;
+  auto lgconf = log_config();
 
   if (lgconf->accesslog_fd != -1) {
     close(lgconf->accesslog_fd);
diff -ru ./src/shrpx_log.h ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log.h
--- ./src/shrpx_log.h	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log.h	2015-03-02 17:00:27.000000000 +0100
@@ -97,8 +97,8 @@
   static int severity_thres_;
 };
 
-#define TTY_HTTP_HD (log_config->errorlog_tty ? "\033[1;34m" : "")
-#define TTY_RST (log_config->errorlog_tty ? "\033[0m" : "")
+#define TTY_HTTP_HD (log_config()->errorlog_tty ? "\033[1;34m" : "")
+#define TTY_RST (log_config()->errorlog_tty ? "\033[0m" : "")
 
 enum LogFragmentType {
   SHRPX_LOGF_NONE,
diff -ru ./src/shrpx_log_config.cc ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log_config.cc
--- ./src/shrpx_log_config.cc	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log_config.cc	2015-03-02 16:58:06.000000000 +0100
@@ -33,9 +33,28 @@
     : accesslog_fd(-1), errorlog_fd(-1), errorlog_tty(false) {}
 
 #ifndef NOTHREADS
-thread_local
+    static pthread_key_t lckey;
+    static pthread_once_t lckey_once = PTHREAD_ONCE_INIT;
+    
+    static void make_key(void) {
+        pthread_key_create(&lckey, NULL);
+    }
+    
+    LogConfig *log_config(void) {
+        pthread_once(&lckey_once, make_key);
+        LogConfig *config = (LogConfig *)pthread_getspecific(lckey);
+        if (!config) {
+            config = new LogConfig();
+            pthread_setspecific(lckey, config);
+        }
+        return config;
+    }
+#else
+    static LogConfig *config = new LogConfig();
+    LogConfig *log_config(void) {
+        return config;
+    }
 #endif // NOTHREADS
-    LogConfig *log_config = new LogConfig();
 
 void
 LogConfig::update_tstamp(const std::chrono::system_clock::time_point &now) {
diff -ru ./src/shrpx_log_config.h ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log_config.h
--- ./src/shrpx_log_config.h	2015-02-26 16:58:47.000000000 +0100
+++ ../nghttp2-0.7.5-pthread-getspecific/src/shrpx_log_config.h	2015-03-02 16:58:19.000000000 +0100
@@ -46,11 +46,7 @@
 
 // We need LogConfig per thread to avoid data race around opening file
 // descriptor for log files.
-extern
-#ifndef NOTHREADS
-    thread_local
-#endif // NOTHREADS
-    LogConfig *log_config;
+extern LogConfig *log_config(void);
 
 } // namespace shrpx
 
